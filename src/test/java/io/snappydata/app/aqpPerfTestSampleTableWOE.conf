hydra.Prms-testRequirement = "Test to determine the ErrorEstimate overhead .";
hydra.Prms-testDescription = "
In this test we create 3 table
Base table,Sample table and again a column table that is exact replica of sample table .
Following types of queries are executed as follows:
An aggregate query directly on base table
Same query on base table 'with error' clause
Same query on base table 'with error' clause and error functions
Same query without any clause and error function on replica of sample table
The above exercise helps us understand the cost of running queries on sample.
";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startEmbeddedModeCluster.conf;

INITTASK  taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
          io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.aqp.AQPPerfTestSampleTableWOE
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-aqp_*-tests.jar
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer ="  sampleFraction=${sampleFraction},qcsParam1=${qcsParam1},qcsParam2=${qcsParam2},qcsParam3=${qcsParam3},numIter=1,warmup=0,queryFile=${queryFile},dataLocation=${dataLocation}"
          threadGroups = snappyThreads
           ;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopEmbeddedModeCluster.conf;

hydra.Prms-totalTaskTimeSec           = 100;
hydra.Prms-maxResultWaitSec           = 5000;

io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar;
io.snappydata.hydra.cluster.SnappyPrms-shufflePartitions = 6;
io.snappydata.hydra.cluster.SnappyPrms-serverMemory = 4g;
/*io.snappydata.hydra.cluster.SnappyPrms-numBootStrapTrials = 50;

io.snappydata.hydra.cluster.SnappyPrms-leadMemory = 4G;*/

